# yaml-language-server: $schema=<urlToTheSchema>


# Build and Deploy to azure :))))))))

name: deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the production branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      #      - name: docker compose
      #        run: docker compose up -d

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #      - name: Extract metadata (tags, labels) for Docker
      #        id: meta
      #        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #        with:
      #          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true # Will only build if this is not here
          tags: |
            ghcr.io/iloveangpao/carparkserver:${{ github.sha }}
            ghcr.io/iloveangpao/carparkserver:latest

  deploy-to-azure:
    runs-on: ubuntu-latest
    needs: build-image

    steps:
      - name: Deploy and run docker images
        env:
          PRIVATE_KEY: ${{ secrets.VM_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.VM_HOSTNAME  }}
          USER_NAME: ${{ secrets.VM_USERNAME  }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd /home/iloveangpao/carpak &&
            wget -q https://raw.githubusercontent.com/iloveangpao/CarparkServer/main/docker-compose.yml -O docker-compose.yml &&
            docker compose pull &&
            docker compose up -d